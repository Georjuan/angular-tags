/*! angular-tags - v1.0.0 - 2014-10-21
* http://boneskull.github.io/angular-tags
* Copyright (c) 2014 Christopher Hiller <chiller@badwing.com>
* Licensed MIT
*/
!function(a,b){"function"==typeof define&&define.amd?define([],function(){return a.returnExportsGlobal=b()}):"object"==typeof exports?module.exports=b():b()}(this,function(){angular.module("badwing.tags.templates",["tags.html"]),angular.module("tags.html",[]).run(["$templateCache",function(a){a.put("tags.html",'<div class="badwing-tags" data-ng-mousedown="selectArea()">\n\n  <div class="badwing-tags-taglist" data-ng-if="toggles.use_taglist">\n    <span data-ng-repeat="tag in tags|orderBy:orderBy" data-ng-mousedown="$event.stopPropagation()">\n      <span class="badwing-tags-tag" data-ng-class="getClasses(tag)">{{tag.name}}\n            <i class="icon-remove" data-ng-click="remove(tag)"></i>\n      </span>\n    </span>\n  </div>\n\n  <span data-ng-show="toggles.inputActive">\n    <input data-ng-if="!srcTags.length" type="text" data-ng-model="inputTag" data-tag-input/>\n    <!-- may want to fiddle with limitTo here, but it was inhibiting my results\n    so perhaps there is another way -->\n    <input data-ng-if="srcTags.length" type="text" data-ng-model="inputTag"\n           class="badwing-tags-input"\n           data-typeahead="stag as stag.name for stag in srcTags|filter:$viewValue|orderBy:orderBy"\n           data-typeahead-input-formatter="{{typeaheadOptions.inputFormatter}}"\n           data-typeahead-loading="{{typeaheadOptions.loading}}"\n           data-typeahead-min-length="{{typeaheadOptions.minLength}}"\n           data-typeahead-template-url="{{typeaheadOptions.templateUrl}}"\n           data-typeahead-wait-ms="{{typeaheadOptions.waitMs}}"\n\n           data-typeahead-editable="{{typeaheadOptions.allowsEditable}}"\n           data-typeahead-on-select="add($item) && selectArea() && typeaheadOptions.onSelect()"/>\n\n  </span>\n</div>\n')}]);var a=angular.module("badwing.tags",["ui.bootstrap.typeahead","badwing.tags.templates"]),b=function(a,b){return{restrict:"A",require:["ngModel","^tags"],link:function(c,d,e,f){var g=f[0],h=f[1],i=h.opts,j=i.delimiter,k=i.trim,l=new RegExp("^"+j+"+$"),m=function(){g.$setViewValue(""),g.$render()},n=function(a){if(a){if(l.test(a))return m();c.add({name:a})&&m()}},o=function(a){var b;for(b=0;b<a.length;b++)n(a[b])},p=function(){var a;c.toggles.selectedTag?(c.remove(c.toggles.selectedTag),delete c.toggles.selectedTag):g.$viewValue||(a=b("orderBy")(c.tags,c.orderBy),c.toggles.selectedTag=a[a.length-1])};d.bind("focus",function(){c.$digest(),delete c.toggles.selectedTag}),d.bind("keypress",function(a){j.charCodeAt(0)===a.which&&n(g.$viewValue)}),d.bind("keydown",function(a){c.$apply(function(){KC_COMPLETE_TAG.indexOf(a.which)>=0?n(g.$viewValue):KC_CANCEL_INPUT.indexOf(a.which)>=0&&!a.isPropagationStopped()?(m(),c.toggles.inputActive=!1):KC_REMOVE_TAG.indexOf(a.which)>=0?p():(delete c.toggles.selectedTag,c.$emit("badwing.tags.keyup",{value:g.$viewValue,$id:c.$id}))})}),c.$watch("toggles.inputActive",function(b){b&&a(function(){d[0].focus()})}),g.$parsers.unshift(function(a){var b=a.split(j);return k&&(b=b.map(function(a){return a.trim()})),b.length>1&&o(b),a}),g.$formatters.push(function(a){return a&&a.value?void d.val(""):a})}}};b.$inject=["$timeout","$filter","$rootScope","badwing.tags.options"],module.exports=b;var c=function(a,b,c,d,e,f,g,h){var i,j=g.controller("ngModel");return j?void(i=angular.extend({},d.options,a.$eval(e.options))):h.warn("tags: tag directive used without ngModel")};c.$inject=["$scope","$timeout","$q","$tags","$attrs","$parse","$element","$log"],a.controller("TagsCtrl",c);var d=function(a){return{restrict:"E",controller:"TagsController",require:"ngModel",replace:!0,template:"<div><div data-ng-include=\"'"+a.template_path+"'\"></div></div>"}};d.$inject=["badwing.tags.options"],a.directive("tags",d);var e={enter:13,esc:27,backspace:8,tab:9,comma:44},f={addable:!1,trim:!0,delimiter:",",classes:{},key_complete:[e.enter,e.comma],key_remove:[e.backspace],key_blur:[e.esc],template_path:"tags.html",use_taglist:!0},g=function(){var a=/^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/;this.options=angular.copy(f),this.setOptions=function(a){angular.extend(this.options,a)},this.$get=function(b){var c=function(c){var d;if(!c)throw new Error("$tags.parse() expects a string parameter");if(d=c.match(a),!d)throw new Error('$tags.parse() expected src specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "'+c+'"');return{itemName:d[3],source:b(d[4]),sourceName:d[4],viewMapper:b(d[2]||d[1]),modelMapper:b(d[1])}};return{options:this.options,parse:c}},this.$get.$inject=["$parse"]};a.provider("$tags",g)});
//# sourceMappingURL=tags-tpls.min.js.map